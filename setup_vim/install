#!/bin/bash

#
# Install script for vim plugins
#

set -u    # Die if trying to access variables that are undefined
set -e    # Die if any command has a non-zero return value

DATE=$(date +%Y%m%d%H%M%S)
ORIG_DIR=$(pwd)
SCRPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

check_version() {
    version=$(vi --version | head -1 | sed 's/.*IMproved \([^ ]\).*/\1/')
    [[ ${version} -eq 8 ]] || echo 'WARNING: vim version 7 detected, consider upgrading'
}

install_vimrc() {
    # Backup and install .vimrc
    if [[ -f ~/.vimrc ]]; then
        cp ~/.vimrc ~/.vimrc_${DATE}
        echo "Backed up current .vimrc file to ~/.vimrc_${DATE}"
    fi
    cp vimrc ~/.vimrc
    HOME=~
    echo 'Installed new vimrc file as' ${HOME}'/.vimrc'
}

install_pathogen() {
    # Pathogen setup, see https://gist.github.com/romainl/9970697
    [[ -d ~/.vim ]] || mkdir ~/.vim
    echo 'Installing Pathogen...'
    [[ -d ~/.vim/autoload ]] || mkdir ~/.vim/autoload/
    [[ -d ~/.vim/bundle ]] || mkdir ~/.vim/bundle/
    curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
}

install_delimitmate() {
    # Install delimitmate
    echo 'Installing Delimitmate (if not alread installed)...'
    cd ~/.vim/bundle
    [[ -d delimitMate ]] || git clone https://github.com/Raimondi/delimitMate.git
    cd - >/dev/null
}

install_nerdtree() {
    # Install nerdtree
    echo 'Installing NerdTree (if not alread installed)...'
    cd ~/.vim/bundle
    [[ -d nerdtree ]] || git clone https://github.com/scrooloose/nerdtree.git
    cd - >/dev/null
}


main() {

    cd $SCRPT_DIR

    check_version
    install_vimrc
    install_pathogen
    install_delimitmate

    echo 'Done.'
    cd $ORIG_DIR >/dev/null
}

main
